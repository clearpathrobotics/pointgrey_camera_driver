#!/usr/bin/env python3
#
# Software License Agreement (BSD)
#
# @author    Mike Purvis <mpurvis@clearpathrobotics.com>
# @copyright (c) 2014, Clearpath Robotics, Inc., All rights reserved.
#
# Redistribution and use in source and binary forms, with or without modification, are permitted provided that
# the following conditions are met:
# * Redistributions of source code must retain the above copyright notice, this list of conditions and the
#   following disclaimer.
# * Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the
#   following disclaimer in the documentation and/or other materials provided with the distribution.
# * Neither the name of Clearpath Robotics nor the names of its contributors may be used to endorse or
#   promote products derived from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
# PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR
# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED
# TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
# NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.

import logging
import shutil
import subprocess
import sys
import tarfile
import urllib.request
import os

logging.basicConfig(level=logging.INFO)

filename = "spinnaker.tar.gz"

ARCHS = {
    'i386': (
        'https://www.ptgrey.com/support/downloads/10825/',
        'spinnaker_1_2_0_16_i386',
        'usr/lib/libSpinnaker.so.1.2.0.16'),
    'x86_64': (
        'http://prod-vm-jfrog-01.clearpath.ai:80//build-external-reqs/spinnaker/spinnaker-1.2.0-16.tar.gz',
        'spinnaker_1_2_0_16_amd64',
        'usr/lib/libSpinnaker.so.1.2.0.16')
    }


archive_url, folder_name, shared_library = ARCHS[sys.argv[1]]
destination_folder = sys.argv[2]

if not os.path.exists(os.path.join(os.getcwd(), "usr/lib/")):
    logging.info("Downloading SDK archive.")
    urllib.request.urlretrieve(archive_url, filename)
    logging.info("Unpacking tarball.")
    with tarfile.open(name=filename, mode="r:gz") as tar:
        tar.extractall()

    if not os.path.exists(os.path.join(os.getcwd(), "usr")):
        os.mkdir(os.path.join(os.getcwd(), "usr"))

    # For every folder/file, copy it into the /usr folder we just created.
    for filename in os.listdir(os.path.join(os.getcwd(), folder_name)):
        if not os.path.exists(os.path.join(os.getcwd(), "usr/", filename)):
            shutil.move(os.path.join(os.getcwd(), folder_name, filename), os.path.join(os.getcwd(), "usr/", filename))

    # now we do some thing for XML files; copy them next to the catkin binary
    xml_path = os.path.join(os.getcwd(), "usr/bin/")
    xml_files = os.listdir(xml_path)

    for files in xml_files:
        if files.endswith(".xml"):
            origin_file = os.path.join(xml_path, files)
            if not os.path.exists(destination_folder):
                os.mkdir(destination_folder)
            print('Copying ' + origin_file + ' to ' + destination_folder)
            shutil.copy(origin_file, destination_folder)
